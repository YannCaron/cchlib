/*
** -----------------------------------------------------------------------
** Nom           : cx\ath\choisnet\dns\PublicIPIndentifier.java
** Description   :
** Encodage      : ANSI
**
**  1.00 2005.02.27 Claude CHOISNET
** -----------------------------------------------------------------------
**
** cx.ath.choisnet.dns.PublicIP
**
*/
package cx.ath.choisnet.dns;

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.BufferedWriter;
import java.io.InputStreamReader;
import java.io.Reader;
import java.net.MalformedURLException;
import java.net.URL;

public class PublicIPIndentifier
{
/** Gestion des traces */
final static org.apache.log4j.Logger logger
    = org.apache.log4j.Logger.getLogger( PublicIPIndentifier.class );

/** */
// private final URL publicUrlLocator;

/** Objet d'acquisition de l'IP publique */
private final PublicIPReaderInterface publicIPReader;

private long lastChangeTimeMillis;

/**
** Objet statique pour les traitements globaux au niveau de la JVM.
*/
private static PublicIP globalPublicIP = null;

/**
**
*/
public PublicIPIndentifier( // --------------------------------------------
    PublicIPReaderInterface publicIPReader
    )
    throws PublicIPException
{
 this.publicIPReader        = publicIPReader;
 this.lastChangeTimeMillis  = System.currentTimeMillis();
}

/**
**
*/
public String getCurrentPublicIP() // -------------------------------------
    throws PublicIPException
{
 return this.publicIPReader.getCurrentPublicIP();
}

/**
**
*/
public String getPreviousPublicIP() // ------------------------------------
    throws PublicIPException
{
 return this.publicIPReader.getPreviousPublicIP();
}

/**
**
*/
public boolean hasChange() // ---------------------------------------------
    throws PublicIPException
{
 final String   previousIP  =  getPreviousPublicIP();
 final String   currentIP;
 final boolean  hasChange;

 try {
    currentIP = getCurrentPublicIP();

//    if( currentIP == null ) {
//        logger.warn( "hasChange{} - getCurrentPublicIP{} => NULL" );
//
//        hasChange = false;
//        }
//    else {
        hasChange = !currentIP.equals( previousIP );
//        }
    }
 catch( PublicIPException e ) {
    logger.warn( "hasChange{} - getCurrentPublicIP{}", e );

    return false;
    }

 if( hasChange ) {
    logger.info( "new IP : " + currentIP );

    this.lastChangeTimeMillis = System.currentTimeMillis();
    }

 return hasChange;
}

/**
**
*/
public long getLastChangeTimeMillis() // ----------------------------------
{
 return this.lastChangeTimeMillis;
}

/**
**
*/
public static PublicIP getGlobalPublicIP() // -----------------------------
{
 return globalPublicIP;
}

/**
**
*/
public synchronized static void setGlobalPublicIP( // ---------------------
        final PublicIP publicIP
        )
{
 globalPublicIP = publicIP;
}

/**
**
*/
public synchronized static void setOnceGlobalPublicIP( // -----------------
        final PublicIP publicIP
        )
{
 if( globalPublicIP == null ) {
    globalPublicIP = publicIP;
    }
}

/**
**
*/
public static String getIP( Reader reader ) // ----------------------------
    throws java.io.IOException
{
 final StringBuffer     sb  = new StringBuffer();
 final BufferedReader   br  = new BufferedReader( reader );
 String                 line;

 while( (line = br.readLine()) != null ) {
    sb.append( line + "\n" );
    }

 br.close();

 final String[] parts = sb.toString().split( "(\n|\t| |:)" );

//System.out.println( "[[" + sb + "]]" );
//
//for( int i = 0; i<parts.length; i++ ) {
//    System.out.println( "[" + parts[ i ] + "]" );
//    }

 return parts[ 0 ];
}

/**
**
*/
public final static URL buildURLFromString( String url ) // ---------------
{
 try {
    return new URL( url );
    }
 catch( java.net.MalformedURLException e ) {
    logger.fatal( "buildURLFromString(" + url + ")", e );

    return null;
    }
}

} // class
