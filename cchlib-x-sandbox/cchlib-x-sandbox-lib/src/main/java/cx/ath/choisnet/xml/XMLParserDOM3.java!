/*
** -----------------------------------------------------------------------
** Nom           : cx/ath/choisnet/xml/XMLParserDOM3.java
** Description   :
** Encodage      : ANSI
**
**  1.51.006 2005.06.20 Claude CHOISNET  - Version initiale
**
** -----------------------------------------------------------------------
**
** cx.ath.choisnet.xml.XMLParserDOM3
**
*/
package cx.ath.choisnet.xml;

//import java.io.File;
//import java.io.InputStream;
//import java.net.URL;
//import javax.xml.parsers.DocumentBuilder;
//import javax.xml.parsers.DocumentBuilderFactory;
//import org.xml.sax.ErrorHandler;
import org.w3c.dom.DOMConfiguration;
import org.w3c.dom.DOMImplementation;
import org.w3c.dom.Document;
import org.w3c.dom.bootstrap.DOMImplementationRegistry;
import org.w3c.dom.ls.DOMImplementationLS;
import org.w3c.dom.ls.LSParser;

/**
**
** @author Claude CHOISNET
** @since   1.51.006
** @version 1.51.006
*/
public class XMLParserDOM3
    implements XMLParser
{
/** */
private /*final*/ Document document;

/**
**
*/
public XMLParserDOM3( // ------------------------------------------
    )
{
}

/**
**
*/
public Document getDocument() // ------------------------------------------
{
 return this.document;
}

/**
**
*/
public static Document build( // ------------------------------------------
    )
{
 return null;

}

/**
**
*/
public static DOMImplementation buildDOMImplementation() // ---------------
    throws XMLParserException
{
 // System.setProperty(
 //            DOMImplementationRegistry.PROPERTY,
 //           "org.apache.xerces.dom.DOMImplementationSourceImpl"
 //           );

 DOMImplementationRegistry registry;

 try {
    registry = DOMImplementationRegistry.newInstance();
    }
 catch( ClassNotFoundException e ) {
    throw new XMLParserException( "Can't create new instance", e );
    }
 catch( InstantiationException e ) {
    throw new XMLParserException( "Can't instanciate", e );
    }
 catch( IllegalAccessException e ) {
    throw new XMLParserException( e );
    }

 return registry;
}

/**
**
*/
public static DOMImplementation buildDOMImplementation0() // ---------------
    throws XMLParserException
{
 DOMImplementationLS impl =
        (DOMImplementationLS)registry.getDOMImplementation( "LS" );

 LSParser builder = impl.createLSParser(
                            DOMImplementationLS.MODE_SYNCHRONOUS,
                            null
                            );

 DOMConfiguration config = builder.getDomConfig();

 config.setParameter("validate", Boolean.TRUE);
 // config.setParameter("schema-type", "http://www.w3.org/2001/XMLSchema");
 // config.setParameter("schema-location", "http://www.nicholaschase.com/informit/personal.xsd");

 return builder.parseURI( "http://www.nicholaschase.com/personal.xml" );
}

} // class
