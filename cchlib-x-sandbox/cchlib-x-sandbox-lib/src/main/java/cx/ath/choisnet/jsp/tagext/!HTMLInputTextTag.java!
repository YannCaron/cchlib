/*
** -----------------------------------------------------------------------
** Nom           : cx/ath/choisnet/jsp/tagext/HTMLInputTextTag.java
** Description   :
** Encodage      : ANSI
**
**  3.02.038 2006.08.08 Claude CHOISNET  - Version initiale
** -----------------------------------------------------------------------
**
** cx.ath.choisnet.jsp.tagext.HTMLInputTextTag
**
*/
package cx.ath.choisnet.jsp.tagext;

import cx.ath.choisnet.html.gadgets.HTMLInputText;
import cx.ath.choisnet.html.HTMLForm;
import cx.ath.choisnet.html.util.impl.HTMLDocumentWriterWrapper;

/**
** <p>
**
** </p>
**
** @author Claude CHOISNET
** @since   3.02.038
** @version 3.02.038
*/
public class HTMLInputTextTag
    extends javax.servlet.jsp.tagext.TagSupport
{
/** serialVersionUID */
private static final long serialVersionUID = 1L;

/** */
private HTMLInputText thisHTMLInputText = new HTMLInputText();

/** */
private HTMLDocumentWriterWrapper wrapper;

/**
**
**
** @see javax.servlet.jsp.tagext.TagSupport
*/
public int doStartTag() // ------------------------------------------------
    throws javax.servlet.jsp.JspException
{
 try {
    //
    // On sauvegarde dans le formulaire courant
    //
    HTMLFormTag.addToCurrent( pageContext, thisHTMLInputText );

    this.wrapper = new HTMLDocumentWriterWrapper( pageContext );

    this.thisHTMLInputText.writeStartTag( this.wrapper );
    }
 catch( Exception e ) {
    throw new javax.servlet.jsp.JspTagException(
                getClass().getName() + ":" + e.getMessage(),
                e
                );
    }

 return SKIP_BODY;
}

/**
**
** @see javax.servlet.jsp.tagext.TagSupport
*/
public int doEndTag() // --------------------------------------------------
    throws javax.servlet.jsp.JspException
{
 return EVAL_PAGE;
}

/**
** <p>
** Tag parameter 'name'
** </p>
**
** @see HTMLInputText#setName(String)
*/
public void setName( final String name ) // -------------------------------
{
 this.thisHTMLInputText.setName( name );
}

/**
**
public String getName() // ------------------------------------------------
{
 return this.thisHTMLInputText.getName();
}
*/

/**
** <p>
** Tag parameter 'size'
** </p>
**
** @see HTMLInputText#setSize(int)
*/
public void setSize( final int size ) // ----------------------------------
{
 this.thisHTMLInputText.setSize( size );
}

/**
**
** <p>
** Tag parameter 'maxlength'
** </p>
**
** @see HTMLInputText#setMaxLength(int)
*/
public void setMaxLength( final int maxlength ) // ------------------------
{
 this.thisHTMLInputText.setMaxLength( maxlength );
}

} // class


